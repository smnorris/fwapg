name: build-loader-image

# used on push for testing / development
# on:
#   push:


on:
  pull_request:
    # debug: remove the dev,putting build action on non existent branches for debug
    branches: ['master', 'main']
    types: ['opened', 'reopened']
    paths-ignore:
      - .vscode/**
      - .gitignore
      - LICENSE
      - README.md
      - code_of_conduct.md
      - pyproject.toml

jobs:
  # This workflow contains a single job called "build"
  buildjob:
    defaults:
      run:
        shell: bash

    name: 'build fwapg-loader image'
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    env:
      DOCKER_BUILDKIT: 0
      DEBUG_DEPLOY: false


    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      id: checkout
      with:
       fetch-depth: 0

    - name: calculate image tag
      id: calculateImageTag
      shell: bash
      run: |
        DATESTAMP=$(date +%Y%m%d-%H%M)
        #REPO=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]'
        echo datestamp is $DATESTAMP
        echo ::set-output name=DATESTAMP::${DATESTAMP}
        echo
        echo ::set-output name=IMAGE_REPOSITORY::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    #- name: Log in to Docker hub Registry
    #  uses: docker/login-action@v1
    #  with:
    #    #registry: ghcr.io
    #    username: ${{ secrets.DOCKER_HUB_USERNAME  }}
    #    password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build and Push Client Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true # Will only build if this is not here
        tags: |
          ghcr.io/${{ steps.calculateImageTag.outputs.IMAGE_REPOSITORY }}/fwapg-loader:latest
          ghcr.io/${{ steps.calculateImageTag.outputs.IMAGE_REPOSITORY }}/fwapg-loader:${{ steps.calculateImageTag.outputs.DATESTAMP }

    #- name: Build and Push Client Docker Image
    #  uses: docker/build-push-action@v2
    #  with:
    #    file: docker/loader/Dockerfile
    #    push: true # Will only build if this is not here
    #    tags: |
    #      ${{ secrets.DOCKER_HUB_USERNAME  }}/fwapg-loader:latest
    #      ${{ secrets.DOCKER_HUB_USERNAME  }}/fwapg-loader:${{ steps.calculateImageTag.outputs.DATESTAMP }}
